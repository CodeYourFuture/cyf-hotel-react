# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm i
    - run: npm run build --if-present
    - run: npm test
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@v4
        with:
          sshPrivateKey: ${{ secrets.SECRETS_SSH_PRIVATE_KEY }}
          server: ${{ secrets.EC2_HOST }}
           
          remote_port: ${{ secrets.EC2_PORT }}
          username: ${{ secrets.EC2_USERNAME }}
          
          localPath: /home/***/cyf-hotel-react/build
          serverPath: /home/***/cyf-hotel-react/src/backend
          TARGET: /home/REMOTE_USER/
          ARGS: -rlgoDzvc -i
          SSH_CMD_ARGS: -o StrictHostKeyChecking=no

'use strict';

exports.__esModule = true;

var _emotion = require('emotion');

Object.keys(_emotion).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _emotion[key];
    }
  });
});
exports.extractCritical = extractCritical;

var _emotionUtils = require('emotion-utils');

function extractCritical(html) {
  // parse out ids from html
  // reconstruct css/rules/cache to pass
  var RGX = /css(?:[a-zA-Z0-9-]*)-([a-zA-Z0-9]+)/gm;

  var o = { html: html, ids: [], css: '', rules: [] };
  var match = void 0;
  var ids = {};
  while ((match = RGX.exec(html)) !== null) {
    if (!ids[match[1]]) {
      ids[match[1]] = true;
    }
  }

  o.rules = _emotion.sheet.sheet.cssRules.slice().filter(function (x) {
    RGX.lastIndex = 0;
    var match = RGX.exec(x.cssText);
    var ret = match == null || ids[match[1]] || false;
    return ret;
  });

  o.ids = (0, _emotionUtils.keys)(_emotion.inserted).filter(function (id) {
    return !!ids[id] || _emotion.sheet.registered[id].type === 'raw' || _emotion.sheet.registered[id].type === 'keyframes';
  });

  var css = '';
  (0, _emotionUtils.forEach)(o.rules, function (x) {
    return css += x.cssText;
  });
  o.css = css;

  return o;
}
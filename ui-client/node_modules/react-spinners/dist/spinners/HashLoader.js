(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', 'react', 'prop-types', 'emotion', 'recompose', '../helpers'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('react'), require('prop-types'), require('emotion'), require('recompose'), require('../helpers'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react, global.propTypes, global.emotion, global.recompose, global.helpers);
    global.HashLoader = mod.exports;
  }
})(this, function (exports, _react, _propTypes, _emotion, _recompose, _helpers) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _interopRequireDefault(_react);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && (typeof call === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Loader = function (_React$Component) {
    _inherits(Loader, _React$Component);

    function Loader() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, Loader);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Loader.__proto__ || Object.getPrototypeOf(Loader)).call.apply(_ref, [this].concat(args))), _this), _this.thickness = function () {
        return _this.props.size / 5;
      }, _this.lat = function () {
        return (_this.props.size - _this.thickness()) / 2;
      }, _this.offset = function () {
        return _this.lat() - _this.thickness();
      }, _this.color = function () {
        return (0, _helpers.calculateRgba)(_this.props.color, 0.75);
      }, _this.before = function () {
        return (0, _emotion.keyframes)([], [_this.thickness(), _this.lat(), -_this.offset(), _this.color(), -_this.lat(), _this.offset(), _this.color(), _this.props.size, -_this.offset(), _this.color(), _this.offset(), _this.color(), _this.thickness(), -_this.lat(), -_this.offset(), _this.color(), _this.lat(), _this.offset(), _this.color(), _this.lat(), -_this.offset(), _this.color(), -_this.lat(), _this.offset(), _this.color()], function createEmotionStyledRules(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24) {
          return [{
            '0%': {
              'width': x0 + 'px',
              'WebkitBoxShadow': x1 + 'px ' + x2 + 'px ' + x3 + ', ' + x4 + 'px ' + x5 + 'px ' + x6,
              'boxShadow': x1 + 'px ' + x2 + 'px ' + x3 + ', ' + x4 + 'px ' + x5 + 'px ' + x6
            },
            '35%': {
              'width': x7 + 'px',
              'WebkitBoxShadow': '0 ' + x8 + 'px ' + x9 + ', 0 ' + x10 + 'px ' + x11,
              'boxShadow': '0 ' + x8 + 'px ' + x9 + ', 0 ' + x10 + 'px ' + x11
            },
            '70%': {
              'width': x12 + 'px',
              'WebkitBoxShadow': x13 + 'px ' + x14 + 'px ' + x15 + ', ' + x16 + 'px ' + x17 + 'px ' + x18,
              'boxShadow': x13 + 'px ' + x14 + 'px ' + x15 + ', ' + x16 + 'px ' + x17 + 'px ' + x18
            },
            '100%': {
              'WebkitBoxShadow': x19 + 'px ' + x20 + 'px ' + x21 + ', ' + x22 + 'px ' + x23 + 'px ' + x24,
              'boxShadow': x19 + 'px ' + x20 + 'px ' + x21 + ', ' + x22 + 'px ' + x23 + 'px ' + x24
            }
          }];
        });
      }, _this.after = function () {
        return (0, _emotion.keyframes)([], [_this.thickness(), _this.offset(), _this.lat(), _this.color(), -_this.offset(), -_this.lat(), _this.color(), _this.props.size, _this.offset(), _this.color(), -_this.offset(), _this.color(), _this.thickness(), _this.offset(), -_this.lat(), _this.color(), -_this.offset(), _this.lat(), _this.color(), _this.offset(), _this.lat(), _this.color(), -_this.offset(), -_this.lat(), _this.color()], function createEmotionStyledRules(x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24) {
          return [{
            '0%': {
              'height': x0 + 'px',
              'WebkitBoxShadow': x1 + 'px ' + x2 + 'px ' + x3 + ', ' + x4 + 'px ' + x5 + 'px ' + x6,
              'boxShadow': x1 + 'px ' + x2 + 'px ' + x3 + ', ' + x4 + 'px ' + x5 + 'px ' + x6
            },
            '35%': {
              'height': x7 + 'px',
              'WebkitBoxShadow': x8 + 'px 0 ' + x9 + ', ' + x10 + 'px 0 ' + x11,
              'boxShadow': x8 + 'px 0 ' + x9 + ', ' + x10 + 'px 0 ' + x11
            },
            '70%': {
              'height': x12 + 'px',
              'WebkitBoxShadow': x13 + 'px ' + x14 + 'px ' + x15 + ', ' + x16 + 'px ' + x17 + 'px ' + x18,
              'boxShadow': x13 + 'px ' + x14 + 'px ' + x15 + ', ' + x16 + 'px ' + x17 + 'px ' + x18
            },
            '100%': {
              'WebkitBoxShadow': x19 + 'px ' + x20 + 'px ' + x21 + ', ' + x22 + 'px ' + x23 + 'px ' + x24,
              'boxShadow': x19 + 'px ' + x20 + 'px ' + x21 + ', ' + x22 + 'px ' + x23 + 'px ' + x24
            }
          }];
        });
      }, _this.style = function (i) {
        return (0, _emotion.css)([], [_this.props.size / 5, _this.props.size / 5, _this.props.size / 10, i === 1 ? _this.before() : _this.after()], function createEmotionStyledRules(x0, x1, x2, x3) {
          return [{
            '': {
              'position': 'absolute',
              'content': '\'\'',
              'top': '50%',
              'left': '50%',
              'display': 'block',
              'width': x0 + 'px',
              'height': x1 + 'px',
              'borderRadius': x2 + 'px',
              'WebkitTransform': 'translate(-50%, -50%)',
              'transform': 'translate(-50%, -50%)',
              'WebkitAnimationFillMode': 'none',
              'animationFillMode': 'none',
              'WebkitAnimation': x3 + ' 2s infinite',
              'animation': x3 + ' 2s infinite'
            }
          }];
        });
      }, _this.wrapper = function () {
        return (0, _emotion.css)([], [_this.props.size, _this.props.size], function createEmotionStyledRules(x0, x1) {
          return [{
            '': {
              'position': 'relative',
              'width': x0 + 'px',
              'height': x1 + 'px',
              'WebkitTransform': 'rotate(165deg)',
              'transform': 'rotate(165deg)'
            }
          }];
        });
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(Loader, [{
      key: 'render',
      value: function render() {
        return this.props.loading ? _react2.default.createElement(
          'div',
          { className: this.wrapper() },
          _react2.default.createElement('div', { className: this.style(1) }),
          _react2.default.createElement('div', { className: this.style(2) })
        ) : null;
      }
    }]);

    return Loader;
  }(_react2.default.Component);

  Loader.propTypes = {
    loading: _propTypes2.default.bool,
    size: _propTypes2.default.number,
    color: _propTypes2.default.string
  };

  Loader.defaultProps = {
    loading: true,
    size: 50,
    color: '#000000'
  };

  var Component = (0, _recompose.onlyUpdateForKeys)(['loading', 'color', 'size'])(Loader);
  Component.defaultProps = Loader.defaultProps;
  exports.default = Component;
});